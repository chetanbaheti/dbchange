/*
 * This file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/tutorial_java_projects.html
 */

buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.5.0"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
  }
}

group "org.dbchange"

subprojects {
  apply plugin: "eclipse"
  apply plugin: "idea"
  apply plugin: "java-library"
  apply plugin: "checkstyle"
  apply plugin: "com.github.spotbugs"
  apply plugin: "jacoco"
  apply plugin: "io.spring.dependency-management"

  sourceCompatibility = 14
  targetCompatibility = 14

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencyManagement {
    imports {
      mavenBom "org.springframework.boot:spring-boot-dependencies:2.3.2.RELEASE"
    }
    dependencies {
      dependency "org.projectlombok:lombok:1.18.12"
      dependency "com.oracle.ojdbc:ojdbc10:19.3.0.0"
    }
  }

  dependencies {
    spotbugs 'com.github.spotbugs:spotbugs:4.1.1'
    spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1"

    api "org.slf4j:slf4j-api"
    api "org.slf4j:jcl-over-slf4j"
    api "org.slf4j:jul-to-slf4j"
    implementation "ch.qos.logback:logback-classic"
    //lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
  }

  plugins.withType(JavaPlugin).configureEach {
    java {
      modularity.inferModulePath = true
    }
  }

  // sca
  checkstyle {
    ignoreFailures = false
    configFile file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
  }

  spotbugs {
    ignoreFailures = false
    effort = "max"
    reportsDir = file("$buildDir/reports/spotbugs")
    excludeFilter = file("${rootProject.projectDir}/config/spotbugs/exclude.xml")
  }

  spotbugsMain {
    reports {
      html {
          enabled = true
      }
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }

  test {
    // Use junit platform for unit tests
    useJUnitPlatform()
    finalizedBy jacocoTestReport
  }

  jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
      xml.enabled true
      csv.enabled true
      html.destination file("${buildDir}/reports/jacoco")
    }
  }
}
